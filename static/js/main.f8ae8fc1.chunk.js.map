{"version":3,"sources":["components/ListItems.js","components/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","ToDo","state","currentItem","handleIntput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newitems","filteredItems","filter","onSubmit","placeholder","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAsCeA,MAjCf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GACzB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACXC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAI7C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAC3BU,KAAK,QACLC,QAAU,kBAAKhB,EAAMiB,WAAWb,EAAKI,cAdfJ,EAAKI,QAoB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eCzBjBmB,IAAQC,IAAIC,KAEL,IA+EQC,EA/Ef,kDACI,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAM,CACPtB,MAAM,GACNuB,YAAY,CACRf,KAAK,GACLF,IAAI,KAGZ,EAAKkB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZH,EADtB,gDAgBI,SAAaf,GACTiB,KAAKC,SAAS,CACVL,YAAY,CACRf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,WApBzB,qBAwBI,SAAQpB,GACJA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GAAoB,KAAjBS,EAAQxB,KAAY,CACnB,IAAMyB,EAAS,GAAD,mBAAKN,KAAKL,MAAMtB,OAAhB,CAAsBgC,IACpCL,KAAKC,SAAS,CACV5B,MAAMiC,EACNV,YAAY,CACRf,KAAK,GACLF,IAAI,SAlCxB,wBAwCI,SAAWA,GACP,IAAM4B,EAAgBP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAC9CA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACV5B,MAAMkC,MA5CtB,uBA+CI,SAAU1B,EAAKF,GACX,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACHA,EAAKI,MAAMA,IACVJ,EAAKM,KAAOA,MAGpBmB,KAAKC,SAAS,CACV5B,MAAMA,MAvDlB,oBA0DI,WACI,OACI,8BACI,yBAAQG,UAAU,OAAlB,UAEI,uBAAME,GAAG,aAAa+B,SAAUT,KAAKD,QAArC,UACI,uBAAOtB,KAAK,OAAOiC,YAAY,kBAC7B9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,eAEjB,wBAAQpB,KAAK,SAAb,oBAEJ,cAAC,EAAD,CAAWJ,MAAO2B,KAAKL,MAAMtB,MAC7Be,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,qBAxEpC,GAA0B2B,aCGXC,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACI,cAAC,EAAD,OCMOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.f8ae8fc1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ListItemsStyle.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'; //to add animation on list\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map((item) =>{\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\"\r\n                 id={item.key}\r\n                 value={item.text}\r\n                 onChange={\r\n                     (e) =>{\r\n                         props.setUpdate(e.target.value,item.key);\r\n                     }\r\n                 }    \r\n                 />\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" \r\n                    icon=\"trash\"\r\n                    onClick={ ()=> props.deleteItem(item.key)     \r\n                    }/>\r\n                </span>\r\n            </p>            \r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n            </FlipMove>\r\n            {/* To add icon we usd npm @fortawesome so first install it refer --> https://github.com/FortAwesome/react-native-fontawesome*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems","import React, { Component } from 'react'\r\nimport ToDoStyle from './ToDoStyle.css'\r\nimport ListItems from './ListItems'\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTrash);\r\n\r\nexport class ToDo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items:[],\r\n            currentItem:{\r\n                text:'',\r\n                key:''\r\n            }\r\n        }\r\n        this.handleIntput = this.handleIntput.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n    }\r\n    \r\n    handleIntput(e){\r\n        this.setState({\r\n            currentItem:{\r\n                text:e.target.value,\r\n                key:Date.now()\r\n            }\r\n        })\r\n    }\r\n    addItem(e){\r\n        e.preventDefault(); \r\n        const newItem = this.state.currentItem;\r\n        //console.log(newItem);\r\n        if(newItem.text !== \"\"){\r\n            const newitems=[...this.state.items,newItem]\r\n            this.setState({\r\n                items:newitems,\r\n                currentItem:{\r\n                    text:'',    //to become input empty again\r\n                    key:''\r\n                }\r\n            })\r\n        }        \r\n    }\r\n\r\n    deleteItem(key){\r\n        const filteredItems = this.state.items.filter(item =>\r\n            item.key!==key);\r\n            this.setState({\r\n                items:filteredItems,\r\n            });\r\n    }\r\n    setUpdate(text,key){\r\n        const items = this.state.items;\r\n        items.map(item =>{\r\n            if(item.key===key){\r\n                item.text = text;\r\n            }\r\n        });\r\n        this.setState({\r\n            items:items\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"ToDo\">\r\n\r\n                    <form id=\"to-do-form\" onSubmit={this.addItem}>\r\n                        <input type=\"text\" placeholder=\"Enter Text here\" \r\n                          value={this.state.currentItem.text}  \r\n                          onChange={this.handleIntput}\r\n                        />\r\n                        <button type=\"submit\">Add</button>\r\n                    </form>\r\n                    <ListItems items={this.state.items}\r\n                    deleteItem={this.deleteItem}\r\n                    setUpdate={this.setUpdate}></ListItems>\r\n                </header>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo\r\n","import './App.css';\nimport ToDo from './components/ToDo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ToDo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}